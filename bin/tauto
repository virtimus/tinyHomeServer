#!/usr/local/bin/python

import os
user=os.getenv('THS_USER') 

from tinydb import TinyDB, Query
db = TinyDB('/ths/db/autostart.json')
qry = Query()

##################### operations
import sys
a_oper=None
if len(sys.argv)>1:
  a_oper=sys.argv[1]


if (a_oper=='r'):
  s_oper=None
  if len(sys.argv)>2:
    s_oper=sys.argv[2]
  if (s_oper=='update'):
    os.system("tauto > /support/autostart.sh && chmod oug+rx /support/autostart.sh")
  else:
    print("ERROR:UnknownOperation:"+s_oper)
    sys.exit(1)
  sys.exit(0)
  

if (a_oper=='s'):

  a_name=sys.argv[2]
  a_json=sys.argv[3]

  import json
  #print(a_json)
  docVal=json.loads(a_json)

  db.upsert(docVal, qry.name == a_name)
  #/ths/bin/thass-start

elif (a_oper=='d'):
  a_name=sys.argv[2]
  db.remove(qry.name == a_name)

##################### output
  
#header        
print("#!/bin/bash")
print("#############################################################################")
print("### generated by tauto script from /ths/db/autostart.json (TinyDB) v.0.01 ###")
print("#############################################################################")
print("#/ths/bin/initap > /var/log/initap.log 2>&1")
print("adb connect localhost")
print(". tenv")
print("su - %s -c '%s'" % (user,". /ths/bin/tenv && tstartup"))

#content        
result = db.all() #db.search(qry.intf == '*')
for x in result:
    if x['command'].startswith('adb'):
        print("%s # name:%s" % (user,x['command'],x['name']))
    else:
        print("su - %s -c '%s' # name:%s" % (user,x['command'],x['name']))
print("### ths ###")

#su - mb -c '/ths/bin/tjupyter-start'

