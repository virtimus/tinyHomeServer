if false; then
msg='Install from source jupyter notebook and some additional extensions' handleHeader
cd /ths/src && tgit cp https://github.com/virtimus/notebook && cd notebook && pip3 install -e . && npm run build
e=$? && handleError 
cd /ths/src/notebook && pip3 install bash_kernel && python3 -m bash_kernel.install
e=$? && handleError 
cd /ths/src/notebook && npm install -g ijavascript && ijsinstall	
e=$? && handleError 
cd /ths/src/notebook && pip3 install jupyter_contrib_nbextensions && jupyter contrib nbextension install
e=$? && handleError 

msg='Install metakernel and bash' handleHeader 
cd /ths/src && tgit cp https://github.com/virtimus/metakernel && cd metakernel &&  pip3 install -e .
e=$? && handleError
cd /ths/src && tgit cp https://github.com/virtimus/calysto_bash && cd calysto_bash && pip3 install -e . && python3 -m calysto_bash install
e=$? && handleError

jupyterHome=/ths

msg='Generate config' handleHeader 
cd /ths && DEBIAN_FRONTEND=noninteractive  echo "n\n\n\n" | jupyter notebook --generate-config
e=$? && handleError

fi # false

msg='Create startup script (tjupyter-start) and password reader (tjupyter-pass)' handleHeader
cat >/ths/bin/tjupyter-start << EOF
#!/bin/bash
cc1=\$(pgrep tjupyter-start | wc -l)
echo \$cc1;
if [ \$cc1 -gt 1 ]; then
  echo "tjupyter-start already running."
  exit 1;
fi
\$(cd /ths && jupyter nbextension enable scroll_down/main && jupyter-notebook --port 8888 --ip=0.0.0.0 --allow-root > /var/log/jupyter.log 2>&1) &
EOF
e=$? && handleError
chmod ug+rx /ths/bin/tjupyter-start
e=$? && handleError
cat >/ths/bin/tjupyter-pass << EOF
#!/bin/bash
#@desc: Jupyter password 
token=\$(cat /ths/rootUL/var/log/jupyter.log | grep -Pom1 'token=\K[^"]+')
echo $token
EOF
e=$? && handleError
chmod ug+rx /ths/bin/tjupyter-pass
e=$? && handleError

msg='Setup jupyter autostart and run jupyter' handleHeader 
tauto s jupyter '{"name":"jupyter", "command":"/ths/bin/tjupyter-start"}' > /support/autostart.sh
e=$? && handleError
tjupyter-start

handleEnd
